#!/usr/bin/env bash

shopt -s expand_aliases
RICE_PATH=~/Documents/ricecooker/src/ricecooker.sh
TEMPLATE_FUNCTION='template:mustache'
TEMPLATE_HASH=(colors.yml)
test -f "$RICE_PATH" && . "$RICE_PATH"
rice_transaction_break_on_fail=false
alias run='rice::exec'
alias add='rice::add'
alias pkg='run sudo xbps-install -Sy'
export PATH=~/.gem/ruby/2.5.0/bin:$PATH

add setup:void:desktop -m
setup:void:desktop() {
	TEMPLATE_HASH+=(desktop.yml)
}

add setup:void:laptop -m
setup:void:laptop() {
	TEMPLATE_HASH+=(laptop.yml)
}

add bootstrap:void -x
bootstrap:void() {
	pkg -u
	pkg void-repo-multilib void-repo-nonfree
}

add bootstrap:void:laptop -x
bootstrap:void:laptp() {
	run sudo xbps-pkgdb -m hold linux
	pkg linux4.13 linux4.13-headers
}

add system_packages:void
system_packages:void() {
	pkg \
		Adapta ConsoleKit2 Fritzing ImageMagick MultiMarkdown R Thunar \
		alacritty alsa-tools alsa-utils apulse atool baobab bluez bsdtar \
		bspwm calc calcurse cgdb cgmanager clang cmake compton-git conky \
		cryptsetup curl curlftpfs dunst exfat-dkms exfat-utils exiftool fcitx \
		fcitx-configtool fcitx-mozc feh filezilla firefox fish-shell flex \
		font-fira-otf font-inconsolata-otf font-symbola fontmanager \
		fuse-sshfs gcolor2 gengetopt gftp git glances gnupg gparted \
		highlight htop inxi ipafont-fonts-otf kcov mdadm mozc mpc mpd mpv \
		mupdf mkfontdir mkfontscale ncmpcpp neofetch neovim nftables \
		noto-fonts-emoji noto-fonts-ttf ntfs-3g numlockx openjdk p7zip \
		pamixer papirus-icon-theme pass pavucontrol plank pmount polybar \
		pulsemixer pylint python python-pip python3 python3-pip qbittorrent \
		qjackctl qsynth qt5-styleplugins qt5ct ranger renameutils retroarch \
		rofi rstudio ruby rust rxvt-unicode sc-im scrot sct setxkbmap \
		shellcheck subversion sxhkd sxiv thunderbird tig tmux udevil unp \
		unrar unzip urxvt-perls uzbl uzbl-tabbed w3m w3m-img \
		xbanish xboxdrv xcompmgr xcursor-vanilla-dmz-aa xdotool xev \
		xf86-input-joystick xlunch xmodmap xorg-minimal xrandr xrdb xset \
		xsetroot xtools youtube-dl zathura zathura-djvu zathura-pdf-mupdf \
		zathura-ps zip
}

add system_packages:void:desktop
system_packages:void:desktop() {
	pkg \
		nvidia
}

add system_packages:void:laptop
system_packages:void:laptop() {
	pkg \
		xf86-video-nouveau \
		xf86-video-intel \
		tlp
}

add system_packages_other:void -x
system_packages_other:void() {
	pkg \
		virtualbox-ose \
		libreoffice \
		texlive-bin \
		wine-32bit 
}

add system_config:void
system_config:void() {
	template -m 600 system/blacklist.conf.mustache /etc/modprobe.d/blacklist.conf
	template -m 644 system/grub.mustache /etc/default/grub
	template -m 640 X11/xorg.conf.mustache /etc/X11/xorg.conf
	run sudo install -Dm644 system/rc.conf /etc/rc.conf
	run sudo install -Dm644 system/sshd_config /etc/ssh/sshd_config
	run sudo update-grub
}

add system_config:void:laptop
system_config:void:laptop() {
	run sudo install -Dm644 system/tlp /etc/default/tlp
}

add system_services:void
system_services:void() {
	run sudo ln -s /etc/sv/alsa /var/service/
	run sudo ln -s /etc/sv/bluetoothd /var/service/
	run sudo ln -s /etc/sv/cgmanager /var/service/
	run sudo ln -s /etc/sv/consolekit /var/service/
	run sudo ln -s /etc/sv/dbus /var/service/
}

add system_services:void:laptop -x
system_services:void:laptop() {
	run sudo ln -s /etc/sv/tlp /var/service/
}

add system_keychain:void -x
system_keychain:void() {
	run sudo mkdir -p /etc/certificates
	run sudo install -Dm640 keychain/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
	run sudo install -Dm644 keychain/adena-ca.pem /etc/certificates/
	run sudo install -Dm644 keychain/edu-ca.pem /etc/certificates/
	run sudo install -Dm600 keychain/eduroam.crt /etc/certificates/
	run sudo install -Dm600 keychain/eduroam.key /etc/certificates/
}

add user_packages -x
user_packages() {
	run pip3 install --user \
		pywal pygments neovim ipython jupyter sqlalchemy Faker wheel

	run gem install mustache --user-install
}

add user_documents -x
user_documents() {
	run mkdir -p ~/{Desktop,Documents,Downloads,Pictures,Music,Videos}
	run mkdir -p ~/.local/{bin,etc,opt,share}
	run mkdir -p ~/.local/share/{themes,icons,fonts}

	run ln -Ts ~/.local/share/themes ~/.themes
	run ln -Ts ~/.local/share/icons ~/.icons
	run ln -Ts ~/.local/share/fonts ~/.fonts

	run install -Dm640 .static/fonts/* ~/.local/share/fonts
	run install -Dm640 .static/pictures/* ~/Pictures
	run mkfontscale ~/.local/share/fonts
	run mkfontdir ~/.local/share/fonts
	run fc-cache -fv
}

add user_config
user_config() {
	template -m 750 fish/config.fish.mustache ~/.config/fish/config.fish
	template -L -m 750 X11/xinitrc.mustache ~/.xinitrc
	template -m 640 X11/Xresources.mustache ~/.config/X11/Xresources
	template -m 640 kitty/kitty.conf.mustache ~/.config/kitty/kitty.conf
	template -m 640 polybar/config.mustache ~/.config/polybar/config
	template -m 750 bspwm/bspwmrc.mustache ~/.config/bspwm/bspwmrc
	template -L -m 640 gtk/gtkrc-3.0.mustache ~/.config/gtk-3.0/settings.ini
	template -L -m 640 gtk/gtkrc-2.0.mustache ~/.gtkrc-2.0
	template -m 640 zathura/zathurarc.mustache ~/.config/zathura/zathurarc
	template -m 640 rofi/config.mustache ~/.config/rofi/config
	template -m 640 dunst/dunstrc.mustache ~/.config/dunst/dunstrc

	run ln -Tfs $(realpath fish/functions) ~/.config/fish/functions
	run ln -Tfs $(realpath bin) ~/.local/bin
	run ln -fs $(realpath sxhkd/sxhkdrc) ~/.config/sxhkd/sxhkdrc
	run ln -fs $(realpath compton/compton.conf) ~/.config/compton.conf
	run ln -fs $(realpath shell/inputrc) ~/.inputrc
	run ln -fs $(realpath shell/bashrc) ~/.bashrc
	run ln -fs $(realpath git/config) ~/.gitconfig
	run ln -fs $(realpath git/ignore) ~/.gitignore
	run ln -fs $(realpath mpd/mpd.conf) ~/.config/mpd/mpd.conf
	run ln -fs $(realpath mpv/input.conf) ~/.config/mpv/input.conf
	run ln -fs $(realpath mpv/mpv.conf) ~/.config/mpv/mpv.conf
	run ln -fs $(realpath ncmpcpp/bindings) ~/.config/ncmpcpp/bindings
	run ln -fs $(realpath ncmpcpp/config) ~/.config/ncmpcpp/config
	run ln -fs $(realpath qutebrowser/config.py) ~/.config/qutebrowser/config.py
	run ln -fs $(realpath ranger/rc.conf) ~/.config/ranger/rc.conf
	run ln -fs $(realpath ranger/rifle.conf) ~/.config/ranger/rifle.conf
	run ln -fs $(realpath ranger/scope.sh) ~/.config/ranger/scope.sh
	run ln -fs $(realpath vim/init.vim) ~/.config/nvim/init.vim
}

add user_keychain -x
user_keychain() {
	run install -Dm644 keychain/id_rsa.pub ~/.ssh/id_rsa.pub
	run install -Dm600 keychain/id_rsa ~/.ssh/id_rsa
	run gpg --import keychain/gpg_public.key
	run gpg --import keychain/gpg_secret.key
	run git clone git@bitbucket.com:maxadamski/password-store ~/.password-store
}

add user_keychain:void -x
user_keychain:void() {
	run cp -r keychain/mozilla ~/.mozilla
	run cp -r keychain/thunderbird ~/.thunderbird
}

